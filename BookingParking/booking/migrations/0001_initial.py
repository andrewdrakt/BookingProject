# Generated by Django 5.1.6 on 2025-03-11 08:12

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='ParkingZone',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Название парковочной зоны')),
                ('address', models.TextField(verbose_name='Адрес')),
                ('total_places', models.PositiveIntegerField(verbose_name='Количество мест')),
                ('tariff_per_hour', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Тариф за час')),
                ('is_available', models.BooleanField(default=True, verbose_name='Доступна')),
                ('photo', models.ImageField(blank=True, null=True, upload_to='parking_photos/', verbose_name='Фото парковки')),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('car_number', models.CharField(blank=True, max_length=20, null=True, verbose_name='Номер автомобиля')),
                ('is_active', models.BooleanField(default=False, verbose_name='Активен (подтверждение email)')),
                ('is_staff', models.BooleanField(default=False, verbose_name='Администратор')),
                ('is_blocked', models.BooleanField(default=False, verbose_name='Заблокирован')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
        ),
    ]
